[build-system]
requires = ["poetry-core>=1.1.0a6","poetry>=1.2.0a2"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "attack_simulator"
version = "0.1.0"
description = "Reinforcement learning on attack simulations"
license = "MIT"
authors = [
    "Jakob Nyberg <jaknyb@kth.se>",
    "Pontus Johnson <pontusj@kth.se>"
]
repository = "https://gitr.sys.kth.se/pontusj/openai_attack_simulation"

[tool.poetry.dependencies]
python = "~3.9"
gym = "^0.21.0"
torch = "^1.10.0"
numpy = "^1.21.4"
matplotlib = "^3.4.2"
pyyaml = "^6.0"
aiohttp = "<3.8"  # FIXME: temporary fix for https://github.com/ray-project/ray/issues/19940
ray = {version = "^1.8.0", extras = ["default", "rllib", "k8s"]}
networkx = "^2.6.3"
seaborn = "^0.11.2"
wandb = "^0.12.6"
gputil = "^1.4.0"

[tool.poetry.dev-dependencies]
tox = "^3.24.4"
tox-poetry-dev-dependencies = "*"
black = {version = "^21.10b0", extras = ["jupyter"]}
isort = "^5.10.1"
flake8 = "<4.0.0"  # FIXME: temporary fix for https://github.com/flakehell/flakehell/issues/18
flakehell = "^0.9.0"
mypy = "^0.910"
pydocstyle = "^6.1.1"
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
tensorboard = "^2.7.0"
jupyterlab = "^3.2.2"
tqdm = {extras = ["notebook"], version = "^4.62.3"}


[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py39
requires =
    tox-poetry-dev-dependencies

[testenv]
deps =
poetry_experimental_no_virtual_env = True
poetry_use_source_repos = True
skip_install = True
allowlist_externals =
    black
    flakehell
    isort
    pydocstyle
    mypy
    pytest
commands =
    black .
    isort .
    flakehell lint .
    # pydocstyle .
    #mypy .
    pytest --cov .
"""


[tool.black]
line_length = 100
target_version = ['py39']


[tool.isort]
profile = "black"
line_length = 100


[tool.flakehell]
max_line_length = 100
format = "grouped"
show_source = true
extended_default_ignore = []

[tool.flakehell.exceptions."*.ipynb"]
pycodestyle = ["+*", "-E302", "-E305", "-E402"]

[tool.flakehell.plugins]
pyflakes = ["+*"]
pycodestyle = ["+*", "-E203", "-W503"]


[tool.mypy]
ignore_missing_imports = true

[tool.coverage.report]
show_missing = true
