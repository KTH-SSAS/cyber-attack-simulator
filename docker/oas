#!/usr/bin/env bash

set -euo pipefail

self=${0##*/}
name=$self${2:+.$2}


case ${1-} in
    build)
        context="$(git rev-parse --show-toplevel 2>/dev/null)" ||
            context="$(dirname "$(cd "$(dirname "$0")" && pwd)")"

        find "$context" -type d -name __pycache__ -exec rm -vfr {} +
        rm -vfr "$context"/.{tox,coverage}
        docker build \
            --tag $name \
            --file "$context/docker/Dockerfile" \
            "$context"
        ;;
    run)
        args=(
            --name $name
            --rm
            --interactive
            --tty
        )

        for path in .ssh .gitconfig
        do ! [ -r "$HOME/$path" ] || args+=(--volume "$HOME/$path:/root/$path")
        done

        for repl in bash python
        do
            history="$HOME/.${name}_${repl}_history"
            touch "$history"
            args+=(--volume "$history:/root/.${repl}_history")
        done

        docker run "${args[@]}" $name
        ;;
    shell)
        set -- exec poetry shell
        ;&
    exec)
        shift
        exec docker exec \
            --interactive \
            --tty \
            $name "$@"
        ;;
    *)
        echo Usage: $self [build\|run\|shell\|exec] [FLAVOR]
        echo
        echo Wrapper for handling a Docker image based on this repo.
        echo If an optional FLAVOR is specified, the corresponding
        echo image and container will be called \`$self.FLAVOR\`.
        exit 1
esac
