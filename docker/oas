#!/usr/bin/env bash

set -euo pipefail

self=${0##*/}
name=$self

! [ "${1-}" ] || ! [ . = ${1::1} ] ||
    {
        name+=$1
        shift
    }

push=europe-west1-docker.pkg.dev/sentience-reinforce/images/$name

context="$(git rev-parse --show-toplevel 2>/dev/null)" ||
    context="$(dirname "$(cd "$(dirname "$0")" && pwd)")"
dockerfile="$context/docker/Dockerfile"
home="$(dirname "$(sed -n '/WORKDIR/{s/[^/]*//;p;}' "$dockerfile")")"

# see if URL:s can easily be opened
case $(uname -s) in
    (Darwin)
        open=open
        ;;
    (Linux)
        ! command -pv xdg-open || open=xdg-open
esac
[ "${open-}" ] || open="echo open the following URL in your browser: "

_open() {
    local url=http://127.0.0.1:$1 retries=${2:-100}
    while ((retries)) && ! curl -s $url >& /dev/null
    do
        sleep .1
        ((retries--))
    done
    ! ((retries)) || $open $url
}

_exec() {
    exec docker exec --interactive --tty $name "${@:-bash}"
}

_bail() {
    echo $'\x1b[1;31m'"$@"$'\x1b[m'
    exit 1
}

_check() {
    [ "$(docker ps --filter name=$name --format '{{.Names}}')" = "$name" ]
}

_run() {
    args=(
        --name $name
        --rm
        --interactive
        --tty
        --memory $((1<<33))  # 8GiB
        --shm-size $(((1<<33)/3))  # > 30% of 8GiB
        --publish 127.0.0.1:8265:8265  # Ray dashboard
        --publish 127.0.0.1:6006:6006  # TensorBoard
        --publish 127.0.0.1:8888:8888  # JupyterLab
    )
    for path in .gitconfig
    do ! [ -r "$HOME/$path" ] || args+=(--volume "$HOME/$path:$home/$path:ro")
    done

    ssh="${OAS_SSH_DIR-$HOME/.ssh}"
    if [ "$ssh" ]
    then
        echo $'\x1b[1;33m'
        echo Using \'$ssh\' as OAS_SSH_DIR...
        echo
        echo To use an alternate path, set the environment variable OAS_SSH_DIR.
        echo Setting OAS_SSH_DIR to the empty string \"\" disables SSH directory mapping.
        echo $'\x1b[m'
        [ / = "${ssh::1}" ] || _bail OAS_SSH_DIR needs to be an absolute path
        [ -d "$ssh" ] || _bail OAS_SSH_DIR must point to a directory
        keys=0
        for key in "$ssh/id_"*
        do
            ! ssh-keygen -lf "$key" || ((++keys))
        done
        ((keys)) || _bail OAS_SSH_DIR must contain an SSH key
        args+=(--volume "$ssh:$home/.ssh")
    fi

    for repl in bash python
    do
        history="$HOME/.${name}_${repl}_history"
        touch "$history"
        args+=(--volume "$history:$home/.${repl}_history:rw")
    done

    num_cli_args=$1
    shift
    # put original command-line arguments last to allow override
    args+=("${@:1:$num_cli_args}")
    shift $num_cli_args
    docker run "${args[@]}" $name "$@"
}

_spawn() {
    if _check
    then _exec "$@"
    else _run 0 "$@"
    fi
}

case ${1-} in
    build)
        find "$context" -type d -name __pycache__ -exec rm -vfr {} +
        rm -vfr "$context"/.{tox,coverage}
        shift
        # put original command-line arguments last to allow override
        docker build --tag $name --file "$dockerfile" "$@" "$context"
        ;;
    push)
        docker tag $name $push
        docker push $push
        ;;
    run)
        shift
        _run $# "$@"
        ;;
    dash)
        _open 8265 1
        ;;
    tboard)
        _open 6006 25 &
        _exec tensorboard --bind_all --logdir $home/ray_results
        ;;
    jlab)
        _open 8888 25 &
        _spawn jupyter-lab --allow-root --no-browser --ip=0.0.0.0
        ;;
    shell)
        _spawn
        ;;
    exec)
        shift
        _exec "$@"
        ;;
    *)
        echo "Usage: $self [.FLAVOR] [build [ARGS]|run [ARGS]|dash|tboard|jlab|shell|exec [ARGS]]"
        echo
        echo Wrapper for handling a Docker image based on this repo.
        echo
        echo When an optional .FLAVOR \(the leading dot is important\!\) is specified,
        echo the corresponding image and container will be called \`$self.FLAVOR\`.
        exit 1
esac
